name: default

kind: pipeline
type: docker
os: linux

platform:
  arch: arm64

node:
   lab: yes
#  arch: arm64

steps:
- name: greeting
  image: alpine
  commands:
  - pwd
  - date
  - hostname
  - echo $HOME

- name: submodules
  image: alpine/git
  commands:
  - git submodule update --recursive --remote

- name: build
  image: ubuntu
  settings:
     repo: docker-http-server
     create_repository: true
     registry: 565683576536.dkr.ecr.eu-west-1.amazonaws.com
     access_key:
       from_secret: ecr-sx-aws_access_key_id
     secret_key:
       from_secret: ecr-sx-aws_secret_access_key
     region: eu-west-1
  tags: 
    - 1.0.0

- name: minio
  image: minio/mc
  entrypoint: sh
  command:
  - -c
  - |
    sleep 2 &&
    mc alias set minio http://172.12.60.5:9000 $access $secret --api S3v4 && 
    mc admin user add minio tester barbarbar &&
    echo '{"Version": "2012-10-17", "Statement": [{"Action": ["s3:GetObject", "s3:PutObject", "s3:DeleteObject", "s3:CreateBucket", "s3:DeleteBucket"], "Effect": "Allow", "Resource": ["arn:aws:s3:::testing-artifacts/*", "arn:aws:s3:::testing-artifacts"], "Sid": ""}]}' > /tmp/policy.json &&
    mc admin policy add minio userpolicy /tmp/policy.json &&
    mc admin policy set minio userpolicy user=tester &&
    mc ls minio/ &&
    mc cp --recursive minio/testing-artifacts/ .
  settings:
     url: 
       from_secret: minio_url
     access:
       from_secret: minio_accessKey
     secret:
       from_secret: minio_secretKey
 #- name: slack
#  image: plugins/slack
#  settings:
#    webhook:
#      from_secret: slack_webhook
#    channel: meerkat-ci
#  when:
#    status: [ success, failure ]

- name: email
  image: igal/drone-email
  settings:
    host: smtp.gmail.com
    from: cicd@sightx.ai
    port: 587
    skip_verify: true
    username: 
       from_secret: google_app_user
    password:
       from_secret: google_app_password
    recipients:
#     - software@sightx.ai
      - igal@sightx.ai
